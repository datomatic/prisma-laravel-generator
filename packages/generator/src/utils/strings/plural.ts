import matchCase from './match-case';

// Aligned to 2.0.4 (commit #83f4d84 https://github.com/doctrine/inflector/commit/83f4d84a0f28d6caf957a30ca8b2cfe2a65f0b86) of doctrine/inflector

const uninflected: RegExp[] = [
  // from laravel https://github.com/laravel/framework/blob/93a1296bca43c1ca8dcb5df8f97107e819a71499/src/Illuminate/Support/Pluralizer.php
  /^cattle$/i,
  /^kin$/i,
  /^recommended$/i,
  /^related$/i,
  // from getPlural https://github.com/doctrine/inflector/blob/2.0.x/lib/Doctrine/Inflector/Rules/English/Uninflected.php
  /^people$/i,
  /^trivia$/i,
  /^\w+ware$/i,
  /^media$/i,
  // from getDefault https://github.com/doctrine/inflector/blob/2.0.x/lib/Doctrine/Inflector/Rules/English/Uninflected.php
  /^\w+media$/i,
  /^advice$/i,
  /^aircraft$/i,
  /^amoyese$/i,
  /^art$/i,
  /^audio$/i,
  /^baggage$/i,
  /^bison$/i,
  /^borghese$/i,
  /^bream$/i,
  /^breeches$/i,
  /^britches$/i,
  /^buffalo$/i,
  /^butter$/i,
  /^cantus$/i,
  /^carp$/i,
  /^cattle$/i,
  /^chassis$/i,
  /^clippers$/i,
  /^clothing$/i,
  /^coal$/i,
  /^cod$/i,
  /^coitus$/i,
  /^compensation$/i,
  /^congoese$/i,
  /^contretemps$/i,
  /^coreopsis$/i,
  /^corps$/i,
  /^cotton$/i,
  /^data$/i,
  /^debris$/i,
  /^deer$/i,
  /^diabetes$/i,
  /^djinn$/i,
  /^education$/i,
  /^eland$/i,
  /^elk$/i,
  /^emoji$/i,
  /^equipment$/i,
  /^evidence$/i,
  /^faroese$/i,
  /^feedback$/i,
  /^fish$/i,
  /^flounder$/i,
  /^flour$/i,
  /^foochowese$/i,
  /^food$/i,
  /^furniture$/i,
  /^gallows$/i,
  /^genevese$/i,
  /^genoese$/i,
  /^gilbertese$/i,
  /^gold$/i,
  /^headquarters$/i,
  /^herpes$/i,
  /^hijinks$/i,
  /^homework$/i,
  /^hottentotese$/i,
  /^impatience$/i,
  /^information$/i,
  /^innings$/i,
  /^jackanapes$/i,
  /^jeans$/i,
  /^jedi$/i,
  /^kin$/i,
  /^kiplingese$/i,
  /^knowledge$/i,
  /^kongoese$/i,
  /^leather$/i,
  /^love$/i,
  /^lucchese$/i,
  /^luggage$/i,
  /^mackerel$/i,
  /^maltese$/i,
  /^management$/i,
  /^metadata$/i,
  /^mews$/i,
  /^money$/i,
  /^moose$/i,
  /^mumps$/i,
  /^music$/i,
  /^nankingese$/i,
  /^news$/i,
  /^nexus$/i,
  /^niasese$/i,
  /^nutrition$/i,
  /^offspring$/i,
  /^oil$/i,
  /^patience$/i,
  /^pekingese$/i,
  /^piedmontese$/i,
  /^pincers$/i,
  /^pistoiese$/i,
  /^plankton$/i,
  /^pliers$/i,
  /^pokemon$/i,
  /^police$/i,
  /^polish$/i,
  /^portuguese$/i,
  /^proceedings$/i,
  /^progress$/i,
  /^rabies$/i,
  /^rain$/i,
  /^research$/i,
  /^rhinoceros$/i,
  /^rice$/i,
  /^salmon$/i,
  /^sand$/i,
  /^sarawakese$/i,
  /^scissors$/i,
  /^sea[ -]bass$/i,
  /^series$/i,
  /^shavese$/i,
  /^shears$/i,
  /^sheep$/i,
  /^siemens$/i,
  /^silk$/i,
  /^sms$/i,
  /^soap$/i,
  /^social media$/i,
  /^spam$/i,
  /^species$/i,
  /^staff$/i,
  /^sugar$/i,
  /^swine$/i,
  /^talent$/i,
  /^toothpaste$/i,
  /^traffic$/i,
  /^travel$/i,
  /^trousers$/i,
  /^trout$/i,
  /^tuna$/i,
  /^us$/i,
  /^vermontese$/i,
  /^vinegar$/i,
  /^weather$/i,
  /^wenchowese$/i,
  /^wheat$/i,
  /^whiting$/i,
  /^wildebeest$/i,
  /^wood$/i,
  /^wool$/i,
  /^yengeese$/i,
];

const irregular: [RegExp, string][] = [
  // from getIrregular https://github.com/doctrine/inflector/blob/2.0.x/lib/Doctrine/Inflector/Rules/English/Inflectible.php
  [/^atlas$/i, 'atlases'],
  [/^axe$/i, 'axes'],
  [/^beef$/i, 'beefs'],
  [/^brother$/i, 'brothers'],
  [/^cafe$/i, 'cafes'],
  [/^chateau$/i, 'chateaux'],
  [/^niveau$/i, 'niveaux'],
  [/^child$/i, 'children'],
  [/^canvas$/i, 'canvases'],
  [/^cookie$/i, 'cookies'],
  [/^corpus$/i, 'corpuses'],
  [/^cow$/i, 'cows'],
  [/^criterion$/i, 'criteria'],
  [/^curriculum$/i, 'curricula'],
  [/^demo$/i, 'demos'],
  [/^domino$/i, 'dominoes'],
  [/^echo$/i, 'echoes'],
  [/^foot$/i, 'feet'],
  [/^fungus$/i, 'fungi'],
  [/^ganglion$/i, 'ganglions'],
  [/^gas$/i, 'gases'],
  [/^genie$/i, 'genies'],
  [/^genus$/i, 'genera'],
  [/^goose$/i, 'geese'],
  [/^graffito$/i, 'graffiti'],
  [/^hippopotamus$/i, 'hippopotami'],
  [/^hoof$/i, 'hoofs'],
  [/^human$/i, 'humans'],
  [/^iris$/i, 'irises'],
  [/^larva$/i, 'larvae'],
  [/^leaf$/i, 'leaves'],
  [/^lens$/i, 'lenses'],
  [/^loaf$/i, 'loaves'],
  [/^man$/i, 'men'],
  [/^medium$/i, 'media'],
  [/^memorandum$/i, 'memoranda'],
  [/^money$/i, 'monies'],
  [/^mongoose$/i, 'mongooses'],
  [/^motto$/i, 'mottoes'],
  [/^move$/i, 'moves'],
  [/^mythos$/i, 'mythoi'],
  [/^niche$/i, 'niches'],
  [/^nucleus$/i, 'nuclei'],
  [/^numen$/i, 'numina'],
  [/^occiput$/i, 'occiputs'],
  [/^octopus$/i, 'octopuses'],
  [/^opus$/i, 'opuses'],
  [/^ox$/i, 'oxen'],
  [/^passerby$/i, 'passersby'],
  [/^penis$/i, 'penises'],
  [/^person$/i, 'people'],
  [/^plateau$/i, 'plateaux'],
  [/^runner-up$/i, 'runners-up'],
  [/^safe$/i, 'safes'],
  [/^sex$/i, 'sexes'],
  [/^soliloquy$/i, 'soliloquies'],
  [/^son-in-law$/i, 'sons-in-law'],
  [/^syllabus$/i, 'syllabi'],
  [/^testis$/i, 'testes'],
  [/^thief$/i, 'thieves'],
  [/^tooth$/i, 'teeth'],
  [/^tornado$/i, 'tornadoes'],
  [/^trilby$/i, 'trilbys'],
  [/^turf$/i, 'turfs'],
  [/^valve$/i, 'valves'],
  [/^volcano$/i, 'volcanoes'],
  [/^abuse$/i, 'abuses'],
  [/^avalanche$/i, 'avalanches'],
  [/^cache$/i, 'caches'],
  [/^criterion$/i, 'criteria'],
  [/^curve$/i, 'curves'],
  [/^emphasis$/i, 'emphases'],
  [/^foe$/i, 'foes'],
  [/^grave$/i, 'graves'],
  [/^hoax$/i, 'hoaxes'],
  [/^medium$/i, 'media'],
  [/^neurosis$/i, 'neuroses'],
  [/^save$/i, 'saves'],
  [/^wave$/i, 'waves'],
  [/^oasis$/i, 'oases'],
  [/^valve$/i, 'valves'],
  [/^zombie$/i, 'zombies'],
];

const rules: [RegExp, string][] = [
  // from getPlural https://github.com/doctrine/inflector/blob/2.0.x/lib/Doctrine/Inflector/Rules/English/Inflectible.php
  [/(s)tatus$/i, '$1$2tatuses'],
  [/(quiz)$/i, '$1zes'],
  [/^(ox)$/i, '$1$2en'],
  [/([lm|])ouse$/i, '$1ice'],
  [/(matr|vert|ind)(ix|ex)$/i, '$1ices'],
  [/(x|ch|ss|sh)$/i, '$1es'],
  [/([^aeiouy]|qu)y$/i, '$1ies'],
  [/(hive|gulf)$/i, '$1s'],
  [/(?:([^f])fe|([lr])f)$/i, '$1$2ves'],
  [/sis$/i, 'ses'],
  [/([it])um$/i, '$1a'],
  [/(tax)on$/i, '$1a'],
  [/(c)riterion$/i, '$1riteria'],
  [/(p)erson$/i, '$1eople'],
  [/(m)an$/i, '$1en'],
  [/(c)hild$/i, '$1hildren'],
  [/(f)oot$/i, '$1eet'],
  [/(buffal|her|potat|tomat|volcan)o$/i, '$1$2oes'],
  [
    /(alumn|bacill|cact|foc|fung|nucle|radi|stimul|syllab|termin|vir)us$/i,
    '$1i',
  ],
  [/us$/i, 'uses'],
  [/(alias)$/i, '$1es'],
  [/(analys|ax|cris|test|thes)is$/i, '$1es'],
  [/s$/i, 's'],
  [/^$/i, ''],
  // [/$/i, 's'], // -> fallback, better use it as last return to allow 100% test coverage
];

const inflector = (value: string) => {
  for (const regexp of uninflected) {
    if (regexp.test(value)) {
      return value;
    }
  }
  for (const [from, to] of irregular) {
    if (from.test(value)) {
      return value.replace(from, to);
    }
  }
  for (const [from, to] of rules) {
    if (from.test(value)) {
      return value.replace(from, to);
    }
  }

  return `${value}s`;
};

// see https://github.com/laravel/framework/blob/93a1296bca43c1ca8dcb5df8f97107e819a71499/src/Illuminate/Support/Pluralizer.php

const plural = (value: string, count = 2) => {
  if (count === 1 || !/^(.*)[A-Za-z0-9\u{0080}-\u{FFFF}]$/u.test(value)) {
    return value;
  }

  const pluralValue = inflector(value);

  return matchCase(pluralValue, value);
};

export default plural;
